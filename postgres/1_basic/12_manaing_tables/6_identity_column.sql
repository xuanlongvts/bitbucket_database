DROP TABLE IF EXISTS color;
CREATE TABLE color
(
    color_id INT GENERATED ALWAYS AS IDENTITY,
    color_name VARCHAR NOT NULL 
);

INSERT INTO color
    (color_name)
VALUES('Red');

SELECT *
FROM color;

-- Error
INSERT INTO color
    (color_id, color_name)
VALUES(2, 'Green');

-- Fix
INSERT INTO color
    (color_id, color_name)
OVERRIDING
SYSTEM
VALUE
VALUES(2, 'Green');

-- Or the second way
DROP TABLE IF EXISTS color;
CREATE TABLE color
(
    color_id INT GENERATED BY DEFAULT AS IDENTITY,
    color_name VARCHAR NOT NULL
);

INSERT INTO color
    (color_name)
VALUES
    ('WHITE');

INSERT INTO color
    (color_id, color_name)
VALUES(2, 'Yellow');

INSERT INTO color
    (color_id, color_name)
VALUES(5, 'Black');

INSERT INTO color
    (color_name)
VALUES
    ('Green');

-- Sequence
DROP TABLE IF EXISTS color;
CREATE TABLE
IF NOT EXISTS color
(
    color_id INT GENERATED BY DEFAULT AS IDENTITY
(START
WITH 10 INCREMENT BY 10),
    color_name VARCHAR NOT NULL
);

INSERT INTO color
    (color_name)
VALUES('Orange');

INSERT INTO color
    (color_name)
VALUES
    ('Purple');

-- Adding an identity column to an existing table
DROP TABLE IF EXISTS shape;
CREATE TABLE
IF NOT EXISTS shape
(
    shape_id INT NOT NULL,
    shape_name VARCHAR NOT NULL
);

-- change shape_id column to identity column.
ALTER TABLE shape
ALTER COLUMN shape_id ADD GENERATED ALWAYS AS IDENTITY

/*
Note that the shape_id needs to have the NOT NULL constraint so that it can be changed to an identity column. 
Otherwise, youâ€™ll get an error as follows:
*/

-- Changing an identity column
ALTER TABLE shape
ALTER COLUMN shape_id
SET GENERATED
BY DEFAULT;

-- Remove generated as identity
ALTER TABLE shape
ALTER COLUMN shape_id
DROP IDENTITY
IF EXISTS;